# This is a basic workflow to help you get started with Actions

name: Deploy to Salesforce Pipeline

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: 
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Now we install nodejs in the VM, and specify version 14
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    
   # Now Install Salesforce CLI
    - name: 'Install Salesforce CLI'
      run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir ~/sfdx
          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
          echo "$HOME/sfdx/bin" >> $GITHUB_PATH
          ~/sfdx/bin/sfdx version
          pwd
          ls -l

    - name: 'Installing sfdx git delta'
      run: | 
             echo y | sfdx plugins:install sfdx-git-delta
             sfdx plugins 
      
     # Install java as it is required for the next step
    - name: 'Installing java'
      run: sudo apt-get install openjdk-8-jdk

          sfdx auth:jwt:grant --clientid 3MVG9d8..z.hDcPKzvrnfeVGPAgyn.AF4BNf6_hLG9R_KMZUzQnyaEiv0uV5QZHXJsOS.17uFHNyUjobJy34A --jwtkeyfile bajajauto.server.key --username dineshkhamele@gmail.com --instanceurl https://login.salesforce.com

 # We use SFDX Git Delta to create a directory with only the metadata that has changed.
            # this allows us to deploy only those changes, as opposed to deploying the entire branch. 
            # This helps reducing deployment times
    - name: 'Create delta packages for new, modified or deleted metadata'
      run: | 
                  mkdir changed-sources
                  sfdx sgd:source:delta --to "HEAD" --from "HEAD" --output changed-sources/ --generate-delta --source force-app/ 
            # Now we can use the sfdx scanner to scan the code in the delta directory
            # The output of the scan is stored in a file called apexScanResults.sarif

            # The .sarif file can later be uploaded to github, so that we can see the 
            # results of the scan directly from the PR.

    - name: 'Check-only deploy delta changes'
      run: |
            sfdx force:source:deploy -p "changed-sources/force-app" --checkonly --json
    - name: 'Deploy destructive changes (if any)'
      run: sfdx force:mdapi:deploy -d "changed-sources/destructiveChanges" --checkonly --ignorewarnings
