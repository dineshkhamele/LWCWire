# This is a basic workflow to help you get started with Actions

name: Deploy to Salesforce Pipeline

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: 
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Now we install nodejs in the VM, and specify version 14
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    
   # Now Install Salesforce CLI
    - name: 'Install Salesforce CLI'
      run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir ~/sfdx
          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
          echo "$HOME/sfdx/bin" >> $GITHUB_PATH
          ~/sfdx/bin/sfdx version
          pwd

   # The URL is stored in the Github Secret named SFDX_INTEGRATION_URL
   # so here we store the URL into a text file
    - name: 'Populate auth file with SFDX_URL secret of integration org'
      shell: bash
      run: echo ${{ secrets.SFDX_INTEGRATION_URL}} > ./SFDX_INTEGRATION_URL.txt

 # Authorize SF Org
    - name: Authorize SF Org
      env:
        CLIENT_ID: ${{ secrets.SALESFORCEPRODCLIENTID }}
        USERNAME: ${{ secrets.SALESFORCEPRODUSERNAME }}
        INSTANCE_URL: ${{ secrets.SALESFORCEPRODINSTANCEURL }}
      run: sfdx force:auth:jwt:grant --clientid $CLIENT_ID -f '/home/runner/work/LWCWire/LWCWire/server.key' --username $USERNAME --instanceurl $INSTANCE_URL -a prod

  
